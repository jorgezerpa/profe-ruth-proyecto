@import url('https://fonts.googleapis.com/css2?family=Lato:ital@1&display=swap');
/* Fonts */
/* Importar aquí la font */



/* Aquí les dejamos como ayuda este "reset" en el cual ajustamos algunas propiedades
*  cuyos valores asigna por defecto el navegador.
*/

/* Reset */
* {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    /* Para que el scrolleo en la one page sea suave */
    scroll-behavior: smooth;
}

/* Para quitar los puntos a los items de listas */
ul {
    list-style: none;
}

/* Para que los enlaces hereden el color de texto y no tengan subrayado */
a {
    text-decoration: none;
    color: inherit;
}

/* Este max-width es para que el contenido no se "estire" demasiado hacia los costados y
*  el margin: auto; para tenerlo centrado fácilmente ;)
*/
main {
    max-width: 1200px;
    width: 90%; /*JZ-> aqui para que, al ser la pantallas menor a 1200px, mantenga cierto padding */
    margin: auto;
    text-align: center;
}

body{
    font-family: 'Lato';
    font-size: 18px;
    line-height: 1.2;
}

header{
    height: 90px;
    display: flex;
    justify-content: space-around;
    align-items: center;
}
nav ul{
    list-style: none;
    display: flex;  
}
nav li{
    margin-right: 15px;
}




/* --------------------------
JZ->
El codigo que tenías no te centra la imagen porque, estas dandole el display flex
a la imagen, y tienes que darselo al container de la imagen, para esto 
tendrias que envolver la imagen en un div, y a ese div padre si le das
el display flex. 

img{
    max-width: 400px;
    display: flex;
    align-content: center;
}

Pero, abajo lo hice de una manera en la que no necesitas display flex y asi no hay que cambiar el html
------------------------- */
img{
    max-width: 400px; 
    width: 90vw; /*JZ-> Asi la haces más responsive, cuando la pantalla sea menor a 400px, la imagen se ajustara al 90% del view width (ancho de pantalla)*/
    margin: 0 auto; /*JZ-> Asi la puedes centrar sin necesidad de display flex*/
    border-radius: 50%; /*JZ-> Quité esto del html y lo puse aca. Si quieres que la imagen sea redonda, cualquier valor igual o mayor a 50% la hará redonda -> es lo mismo visualmente 50%, 65% ó cualquier otro valor*/
    padding-top: 100px;
    padding-bottom: 100px;
}




h1{
    font-size: 36px;
    display: flex;
    justify-content: center;
    margin-bottom: 20px;
}
h2{
    font-size: 28px;
    text-align: center;
    margin-top: 50px; /*JZ-> para generar mas espacio sobre los titulos y dar mejor jerarquia visual*/
}

p{
    margin-top: 20px;
    margin-bottom: 20px; 
    text-align: justify;
}

h4{
    margin-top: 20px;
}
.cv{
    display: block;
    background-color: #af599e;
    color: #fbfbfb;
    font-weight: bold;
    padding: 15px;
    border-radius: 10px;
    text-align: center;
    font-size: 20px;
    margin-top: 50px; /*JZ-> aumenté el margin top */
    margin-bottom: 50px; /*JZ-> agregué margin de abajo */
    cursor: pointer;
}




/* ------------------------------------------
JZ-> AQUI SI HICE VARIOS CAMBIOS  CON LOS ESTILOS DEL FORMULARIO Y ALGUNOS CAMBIOS EN EL HTML.
Más precisament, en el html: 
1. Envolví los label y divs en un div para cada pareja, y le asigné la clase .for__item-input y .form__item-textarea respectivamente
------------------------------------------ */
#contacto h2 {
    margin-bottom: 30px; /*JZ->damos espacio al bottom del titulo "contacto"*/
}

#contacto div{ /*Aqui es donde tenias que agregar el flex, al container de los inputs*/
    display: flex;
    align-content: center;
    text-align: center;
    gap: 40px; /*JZ->espaciado entre elementos*/
    flex-wrap: wrap; /*para que el form__item pase hacia abajo si ya no tiene espacio*/
}

/*No entiendo qué hice para que desaparecieran las casillas 
del formulario de contacto. Solo necesitaba alinearlas correctamente

JZ->   Habías hecho algo como esto -> border: 1px; -> no colocaste ni el tipo ni el color
SIEMPRE tienes que especificar: grosor, tipo y color, por ejemplo -> border: 1px solid red;
*/

/*JZ-> LAs clases las asigné para dar estilos más facilmente*/
.form__item-input {
    width: 40%; /*JZ-> Los inputs toman el 50% del width para que asi esten los dos en la misma línea (pusé 40% poorque el gap tambien cuenta como espacio, si ponía 50% iban a saltar de linea asi que le reste un 10% para asegurarnos de que no pase eso)*/
}
.form__item-textarea {
    width: 100%; /*JZ-> El text area si toma el 100% para que siempre ocupe una linea el solito*/
}



label{
    display:block;
    font-weight: bold;
}

input,
textarea{
    width: 100%; /*JZ-> que ocupen el maximo espacio posible (dentro de su div padre, el que te dije que cree para envolverlos)*/
    padding: 8px;
    margin-top: 5px;
    /*JZ->Eliminamos las lineas, y solo agregamos al bottom */
    border: none; 
    border-bottom: 1px solid #180d16;
}

button{
    display: inline-block;
    background-color: #af599e;
    color: #fbfbfb;
    padding: 10px;
    font-size: 20px;
    margin-top: 40px; /*JZ-> agregué espaciado*/
}

.icons img{
    display: flex;
    justify-content: center;
    align-items: center;
    max-width:  40px;
    margin: auto;
    font-size: 1rem;
}
footer{
    background-color: #af599e;
    color: #fbfbfb;
    height: 90px;
    text-align: center;
    padding: 10px
}
/* Recomendaciones! 
*  - Comenzar desde lo más general y luego ir hacia lo mas específico, asignando primero
*    "estilos generales". Una buena idea sería comenzar por el <body> ;)
*
*  - Recuerden que queremos evitar "repetir código", en CSS usando la cualidad de la herencia
*    podemos setear ciertas propiedades en un elemento padre y dejar que sean heredadas (por ejemplo: font-size)
*
*  - Nadie sabe todas las propiedades CSS de memoria, si no saben como hacer algo no lo recuerdan, la respuesta
*    pueden encontrarla buscando en la web algo como "CSS como hacer ... " o "propiedad css para hacer ..."
*
*  - Usen mucho las herramientas para desarrolladores del navegador para ir
*    probando el CSS que escriben, resolver dudas y problemas.
*
*  - Paciencia, resiliencia y creatividad! No se desanimen, las primeras experiencias maquetando con HTML y CSS
*    pueden ser frustrantes, pero estas habilidades se van desarrollando con la experiencia, es como aprender
*    un trabajo manual, hacer una artesanía, tocar un instrumento musical... la práctica es todo!
*/


/* @media (max-weidth:770px){ ---> tenias un error en la palabra width */
@media (max-width:770px){
    header{
        flex-direction: column;
        text-align: center;
    }
    .form__item-input {
        width: 100%; /*JZ-> aquí si le damos el width a full a los inputs, para que queden una abajo del otro*/
    }
}

    /*JZ-> Esto no se que hace pero hay lo deje :v 
    principio de codigo numero 2 -> "if its not broken not solve it" ajajajajaja
    pero si ves que lo puedes eliminar sin problema o descubres que hace pues lo modificas    
    */
    sections{
        min-height: 100vh;
    }
